plugins {
    id "com.android.application"
    id "kotlin-android"
    // The Flutter Gradle Plugin must be applied after the Android and Kotlin Gradle plugins.
    id "dev.flutter.flutter-gradle-plugin"
}

def localProperties = new Properties()
def localPropertiesFile = rootProject.file("local.properties")
if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader("UTF-8") { reader ->
        localProperties.load(reader)
    }
}

// Cargar variables de entorno desde .env (producciÃ³n)
def envProperties = new Properties()
def envFile = rootProject.file("../.env")
if (envFile.exists()) {
    envFile.withReader("UTF-8") { reader ->
        envProperties.load(reader)
    }
}

// Cargar variables de entorno desde .env.dev (desarrollo)
def envDevProperties = new Properties()
def envDevFile = rootProject.file("../.env.dev")
if (envDevFile.exists()) {
    envDevFile.withReader("UTF-8") { reader ->
        envDevProperties.load(reader)
    }
}

def flutterVersionCode = localProperties.getProperty("flutter.versionCode")
if (flutterVersionCode == null) {
    flutterVersionCode = "1"
}

def flutterVersionName = localProperties.getProperty("flutter.versionName")
if (flutterVersionName == null) {
    flutterVersionName = "1.0"
}

// API keys por flavor
def googleMapsApiKey = envProperties.getProperty("GOOGLE_MAPS_API_KEY") ?: System.getenv("GOOGLE_MAPS_API_KEY") ?: localProperties.getProperty("GOOGLE_MAPS_API_KEY") ?: ""
def googleMapsApiKeyDev = envDevProperties.getProperty("GOOGLE_MAPS_API_KEY") ?: System.getenv("GOOGLE_MAPS_API_KEY") ?: localProperties.getProperty("GOOGLE_MAPS_API_KEY") ?: ""


android {
    namespace = "com.kadesh.mc"
    compileSdk = 35
    ndkVersion = flutter.ndkVersion

    compileOptions {
        sourceCompatibility = JavaVersion.VERSION_1_8
        targetCompatibility = JavaVersion.VERSION_1_8
    }

    defaultConfig {
        // TODO: Specify your own unique Application ID (https://developer.android.com/studio/build/application-id.html).
        applicationId = "com.kadesh.mc"
        // You can update the following values to match your application needs.
        // For more information, see: https://docs.flutter.dev/deployment/android#reviewing-the-gradle-build-configuration.
        minSdk = flutter.minSdkVersion
        targetSdk = flutter.targetSdkVersion
        versionCode = flutterVersionCode.toInteger()
        versionName = flutterVersionName
    }

    buildTypes {
        release {
            // TODO: Add your own signing config for the release build.
            // Signing with the debug keys for now, so `flutter run --release` works.
            signingConfig = signingConfigs.debug
        }
    }

    flavorDimensions "app"

    productFlavors {
        dev {
            dimension = "app"
            applicationIdSuffix = ".dev"
            versionNameSuffix = "-dev"
            resValue "string", "app_name", "Kadesh Dev"
            manifestPlaceholders = [
                GOOGLE_MAPS_API_KEY: googleMapsApiKeyDev
            ]
        }

        prod {
            dimension = "app"
            resValue "string", "app_name", "Kadesh"
            manifestPlaceholders = [
                GOOGLE_MAPS_API_KEY: googleMapsApiKey
            ]
        }
    }
}

flutter {
    source = "../.."
}
